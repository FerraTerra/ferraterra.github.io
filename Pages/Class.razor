@page "/class/{id}"
@inject HttpClient Http

@if (class_ != null) {
    <PageTitle>@class_.Name</PageTitle>
    <h1>@class_.Name</h1>
    <article>
        <dl>
        @if (class_.HP != null) {
            <dt>ПЗ:</dt>
            <dd>@class_.HP</dd>
        }
        @if (class_.SP != null) {
            <dt>ПЖ:</dt>
            <dd>@class_.SP + <i>Вын</i></dd>
        }
        </dl>
        @if (class_.Sources != null && class_.Sources.Any()) {
            @if(class_.Sources.Count == 1) {
                <dt>Source</dt>
            } else {
                <dt>Source</dt>
            }
            @foreach (var source in class_.Sources) {
                <dd>
                    <a href=@source.Value>@source.Key</a>
                </dd>
            }
        }
    </article>
    <section>
        @class_.Text
    </section>
} else {
    <PageTitle>Класс @Id</PageTitle>
    <h1>Класс @Id</h1>
    <p role="alert">Извините, данная страница недоступна.</p>
}

@code{
    [Parameter]
    public string Id { get; set; }

    private ClassData? class_;

    protected override async Task OnInitializedAsync()
    {
        class_ = await Http.GetFromJsonAsync<ClassData>($"classes/{Id}.json");
    }

    public record ClassData(string Name, string Text, Dictionary<string, string> Sources, int? HP, int? SP);
}