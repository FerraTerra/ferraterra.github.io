@page "/class/{id}"
@inject HttpClient Http

@if (class_ != null) {
    <PageTitle>@class_.Name</PageTitle>
    <h1>@class_.Name</h1>
    <article>
        <dl>
            @if (class_.Sources != null && class_.Sources.Any()) {
                @if(class_.Sources.Count == 1) {
                    <div class="one">
                        <dt>Source:</dt>
                        @foreach (var source in class_.Sources) {
                            <dd>
                                <a href=@source.Value>@source.Key</a>
                            </dd>
                        }
                    </div>
                } else {
                    <div class="many">
                        <dt>Sources</dt>
                        @foreach (var source in class_.Sources) {
                            <dd>
                                <a href=@source.Value>@source.Key</a>
                            </dd>
                        }
                    </div>
                }
            }
        </dl>
    </article>
    <main>
        <details>
            <summary>
                Описание
            </summary>
            <p>
                @class_.Text
            </p>
        </details>
    </main>
    <section>
        <dl>
            @if (class_.HP != null) {
                <div class="one">
                    <dt>ПЗ:</dt>
                    <dd>@class_.HP</dd>
                </div>
            }
            @if (class_.SP != null) {
                <div class="one">
                    <dt>ПЖ:</dt>
                    <dd>@class_.SP + <i>Вын</i></dd>
                </div>
            }
        </dl>
    </section>
} else {
    <PageTitle>Класс @Id</PageTitle>
    <h1>Класс @Id</h1>
    <p role="alert">Извините, данная страница недоступна.</p>
}

@code{
    [Parameter]
    public string Id { get; set; }

    private ClassData? class_;

    protected override async Task OnInitializedAsync()
    {
        class_ = await Http.GetFromJsonAsync<ClassData>($"classes/{Id}.json");
    }

    public record ClassData(string Name, string Text, Dictionary<string, string> Sources, int? HP, int? SP);
}