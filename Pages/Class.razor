@page "/class/{id}"
@inject HttpClient Http

@if (class_ != null) {
    <PageTitle>@class_.Name</PageTitle>
    <header>
        <h1>@class_.Name</h1>
        @if (class_.HP != null) {
            <p>ПЗ: @class_.HP</p>
        }
        @if (class_.SP != null) {
            <p>ПЖ: @class_.SP + Вын</p>
        }
    </header>
    @if (class_.Sources != null && class_.Sources.Any()) {
        <article>
            <p>
                @if(class_.Sources.Count == 1) {
                    <b>Source</b>
                } else {
                    <b>Sources</b>
                }
            </p>
            <ul>
                @foreach (var source in class_.Sources) {
                    <li><a href=@source.Value>@source.Key</a></li>
                }
            </ul>
        </article>
    }
    <section>
        @class_.Text
    </section>
} else {
    <PageTitle>Класс @Id</PageTitle>
    <h1>Класс @Id</h1>
    <p role="alert">Извините, данная страница недоступна.</p>
}

@code{
    [Parameter]
    public string Id { get; set; }

    private ClassData? class_;

    protected override async Task OnInitializedAsync()
    {
        class_ = await Http.GetFromJsonAsync<ClassData>($"classes/{Id}.json");
    }

    public record ClassData(string Name, string Text, Dictionary<string, string> Sources, int? HP, int? SP);
}